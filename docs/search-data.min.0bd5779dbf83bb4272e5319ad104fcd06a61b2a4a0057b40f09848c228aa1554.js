(function(){const pages=[{"idx":0,"href":"/notes/docs/","title":"About","content":" About  Masaki E. Tsuda 津田 真樹（つだ　まさき） Twitter : teuder  "},{"idx":1,"href":"/notes/r/","title":"R","content":" R バージョン管理  RSwitch R本体のバージョン管理 https://twitter.com/hrbrmstr renv, packrat : パッケージのバージョン管理  ソースコードを確認 lookup パッケージ\ndevtools::install_github(\u0026quot;jimhester/lookup\u0026quot;) lookup::lookup(dplyr::summarise)  オブジェクトを調べる class() typeof() mode()\nstr() attributes()\n"},{"idx":2,"href":"/notes/gis/","title":"GIS","content":" GIS GIS関係のRパッケージの一覧  https://cran.r-project.org/web/views/Spatial.html https://cran.r-project.org/web/views/SpatioTemporal.html https://www.r-spatial.org/  一般  sp：地理空間のクラスやメソッドを提供している sf : OGC Simple Featuresという標準に従って開発されている。sfパッケージの公式サイト、OGCが定義するファイル形式の読み書き（WKT, WKB） starts : 多次元arrayで時空間データを表現 raster : ラスターデータの可視化と分析 spatial.tools : rasterを拡張して並列計算など rgdal : GDALライブラリがサポートするラスターデータ, OGRライブラリがサポートするベクターデータへのバインディング、GeoJSON や Shapefile の読み書き、 PROJ.4がサポートする投影法 rgeos : Geometry Engine - Open Source (\u0026lsquo;GEOS\u0026rsquo;)ライブラリへのバインディング GISTools : 空間データをマッピングしたり加工したり  データの読み書き  maps : mapdata, mapproj パッケージと共に地理空間データベースを提供 maptools : ESRI ArcGIS/ArcView shapefiles の読み書きなど、地理情報オブジェクトの扱い、GSHHGの海岸線データベースへのアクセス？？ shapefiles : ESRI ArcGIS/ArcView shapefiles の読み書き rpostgis : PostGISが有効化されたPostgreSQLへのコネクション rgrass7 : GRASS v7 とのコネクション RQGIS : RからQGISの機能を利用する  データの取得  geosapi : GeoServerのAPIからデータを取得する？ geonapi : GeoNetworkのAPIからデータを取得する？ rgbif : Global Biodiversity Information Facility (GBIF) にあるデータへのアクセス  計算  lwgeom : PostGISで使われている liblwgeom へのバインディング gdalUtils : GDAL Utilityへのラッパー？ gdistance : grid間の距離やルートを計算する？ geosphere : 距離、面積、角度などの計算？ cshapes : 距離行列の計算 spsurvey : 地理的調査のためのサンプリング手法など？ trip : 動物のトラッキングデータ分析 magclass : 時空間解析 taRifx : ユーティリティ関数 geoaxe : オブジェクトを小さく分割する lawn : Turfjs ブラウザの地理空間解析ライブラリのクライアント rcosmo : 球体に対する計算を提供 areal : Areal Weighted Interpolation の実装  データのエラー調査  landsat : 衛星画像の補正？ cleangeo : 空間オブジェクトのエラーの調査？  カラーパレット  RColorBrewer : Mapでいい感じのカラーパレットを提供 viridis : 視覚障害者にも優しいカラーパレットを提供 classInt : １次元の変数の値を階級に分けるのに使う？？  可視化  ggspatial : ggplot2で可視化する時の便利ツール rasterVis : rasterの可視化 quickmapr : sp, sfオブジェクトをとりあえず可視化できる cartography : いろんな地図作成？ mapmisc : 軽量な地図作成？  可視化ウェブ  mapView, leaflet, leafletR インタラクティブな地図の可視化 RgoogleMaps : Googleマップに問い合わせしたり、Googleマップの画像を背景にしたプロットを描く plotGoogleMaps : Googleマップに描画する plotKML : オブジェクトをKMLで書き出してGoogle Earthで読み込めるようにする？？ ggmap : Google MapやOpen Street Map に描画する？ mapedit : Shinyでleafletで書いた地図を編集できるようにする？？  Cartograms 地図を変形させる可視化？ cartogram : 面積を風船のように伸び縮みさせる\nPoint Pattern Analysis  spatial, spatstat spatgraphs : 点のパターンのグラフ解析  空間統計  gstat, geoR, geoRglm : 統計量、統計モデル？ vardiag : Variogram を書く  Disease mapping and areal data analysis https://cran.r-project.org/web/views/Spatial.html\nSpatial regression https://cran.r-project.org/web/views/Spatial.html\nEcological analysis https://cran.r-project.org/web/views/Spatial.html\nファイル形式  GeoJSON WKT, WKB Shapefile PostGIS  地理解析の学習  GIS基礎知識 Geocomputation with R Rでの地理情報解析の方法がめっちゃ充実、sfパッケージベース Spatial Data Science Spatio-Temporal Statistics with R Introduction to visualising spatial data in R 空間情報クラブ  スライド データソース  MarineRegions.org 海洋関係のShapefileを公開 GeoServer GeoNetwork Natural Earth 国土数値情報  団体コミュニティ  Open Geospatial Consortium 地理情報関係の標準化団体 OSGeo OSGeo4W WindowsのためにOSSのGIS関連ソフトをビルドしているらしい  リンク "},{"idx":3,"href":"/notes/miscellaneous/bigquery/","title":"BigQuery","content":" BigQuery レギュラーSQLをデフォルトにする クエリの前に #standardSQL の記述を追加する。逆にレガシーにしたい場合は #legacySQL を記述する。\n#standardSQL SELECT weight_pounds, state, year, gestation_weeks FROM `bigquery-public-data.samples.natality` ORDER BY weight_pounds DESC LIMIT 10; .bigqueryrc に以下を記述\n[query] --use_legacy_sql=false [mk] --use_legacy_sql=false  "},{"idx":4,"href":"/notes/miscellaneous/vscode/","title":"vscode","content":" Visual Studio Code 正規表現検索・置換 検索置換のショートカット opt cmd F\n検索BOXの横の .* ボタンを押す\n正規表現の記号    記号 意味 例     ^ 行頭    $ 行末    . 任意の１文字    .* 任意の１文字が0文字以上連続する    .+ 任意の１文字が１文字以上連続する    [] []内の任意の１文字 [ABC]+ AまたはBまたはCが1文字以上連続する    検索で認識された文字列を置換の際に使う 検索BOXで正規表現を()でくくり、置換BOXの中で$1や$2で指定する。\n検索BOX： 「(.+)と(.+)」\n置換BOX： 【$1】が【$2】\n"},{"idx":5,"href":"/notes/miscellaneous/homebrew/","title":"homebrew","content":" homebrew 基本コマンド brew search [TEXT|/REGEX/]\nbrew info [FORMULA...]\nbrew install FORMULA\nbrew update\nbrew upgrade [FORMULA...]\nbrew uninstall FORMULA...\nbrew list [FORMULA...]\nインストール先： /usr/local/Cellar\nもう少し詳細には：　/usr/local/Cellar/パッケージ名/バージョン\n"},{"idx":6,"href":"/notes/miscellaneous/hugo/","title":"Hugo","content":" Hugo Hugoはマークダウンから静的サイトのためのhtmlを生成するソフトウェア\n Hugoフォルダの構成  \u0008/contents フォルダの中にサイトの内容を記述したマークダウン形式のファイルを配置する。\nマークダウンの内容の先頭には、ファイルの情報を記述する（YAML、TOML、JSONのいずれかの形式）。\n"},{"idx":7,"href":"/notes/r/ggplot2/","title":"ggplot2","content":" ggplot2 ggplot2: Elegant Graphics for Data Analysis\n"},{"idx":8,"href":"/notes/miscellaneous/git/","title":"git","content":" Git Gitの基本コマンド\n"},{"idx":9,"href":"/notes/r/raster/","title":"raster","content":" raster # GooTiffの読み込み data \u0026lt;- raster(\u0026#34;path/data.tif\u0026#34;) 値と座標のデータフレームに変換する\ndf \u0026lt;- rasterToPoint(data)  "},{"idx":10,"href":"/notes/r/sf/","title":"sf","content":" sf 定義されたクラス  sfgクラス：個別の地物 sfcクラス：sfgオブジェクトのリスト、リストの各要素が１地物に相当 sf クラス：sfcオブジェクトをgeometory列としてもつデータフレーム、１行が１地物、geometory列以外の列は地物がもつ値  地物の型  POINT：点 LINESTRING：線分 POLYGON：多角形 MULTIPOINT：点の集合 MULTILINESTRING：線分の集合 GEOMETORYCOLLECTION：様々な型のデータの集合  処理関数 sfオブジェクトの切り抜き\nst_crop()\n地物の型の変換\nst_cast()\nsfオブジェクトをデータフレームに変換する（この時、dfにはgeometory列（リスト列=sfcオブジェクト）が残る）\ndf \u0026lt;- as.data.frame(data_sf)\nsfオブジェクトからgeometory列を削除すると値（=地物の属性）だけのデータフレームになる\ndf \u0026lt;- st_set_geometory(data_sf, NULL)\nst_set_geometory() はデータフレームにgeometory列をくっつける関数だけど、NULLを渡すとsfオブジェクトからgeomeotry列を削除できる。\nst_intersects(x, y, sparse = TRUE, ...)\nst_disjoint(x, y = x, sparse = TRUE, prepared = TRUE)\nst_touches(x, y, sparse = TRUE, prepared = TRUE)\nst_crosses(x, y, sparse = TRUE, prepared = TRUE)\nst_within(x, y, sparse = TRUE, prepared = TRUE)\nst_contains(x, y, sparse = TRUE, prepared = TRUE)\nst_contains_properly(x, y, sparse = TRUE, prepared = TRUE)\nst_overlaps(x, y, sparse = TRUE, prepared = TRUE)\nst_equals(x, y, sparse = TRUE, prepared = FALSE)\nst_covers(x, y, sparse = TRUE, prepared = TRUE)\nst_covered_by(x, y, sparse = TRUE, prepared = TRUE)\nst_equals_exact(x, y, par, sparse = TRUE, prepared = FALSE)\nst_is_within_distance(x, y, dist, sparse = TRUE)\n"},{"idx":11,"href":"/notes/miscellaneous/","title":"miscellaneous","content":" miscellaneous tmux : ターミナル多重化\n"},{"idx":12,"href":"/notes/r/dbi/","title":"DBI","content":" DBI DBIパッケージはRからデータベース（DB）とやりとりするためのインターフェースを提供している。これにより、ドライバーを切り替えるだけで、共通のインターフェースを用いて様々な種類のDBサーバーとやりとりすることができる。\nDBIパッケージはRとデータベース（DB）がやりとりするための基本的な関数を提供している。それぞれの関数の引数などは各DBのドライバーを提供している別のパッケージ（ RPostgreSQL や bigquery など）によって動作が細かく指定できるように拡張されているので、そちらのマニュアルを参照すること。\nオブジェクト DBIパッケージでは主に下の３種類のオブジェクトが登場する。\nDBIDriver: ドライバー・オブジェクト drv\n dbDriver() RSQLite::RSQLite(), RPostgreSQL::RPostgreSQL(), RMySQL::RMySQL(), bigrquery::bigquery() などの関数が返すオブジェクト  DBIConnection: DBコネクション・オブジェクト con\ndbConnect()が返すオブジェクト\nDBIResult: クエリ結果のオブジェクト res\ndbSendquery()が返すオブジェクト\nドライバ・コネクション・クエリ結果の情報：dbGetInfo() dbGetInfo()\n接続したいDBへのドライバーをを用意する DBIパッケージに対応した、各DBへのドライバを、提供するパッケージをインストールする。\n RPostgreSQL RMySQL RSQLite bigquery  ドライバを用意する。下の２つの方法は等価。\ndrv \u0026lt;- PostgreSQL() drv \u0026lt;- dbDriver(\u0026quot;PostgreSQL\u0026quot;)  ドライバを閉じる：dbUnloadDriver\ndbUnloadDriver(drv)  DBサーバーへ接続する：dbConnect ドライバーは例えば以下がある。各パッケージをインストールする。\n RSQLite::RSQLite() RPostgreSQL::RPostgreSQL() RMySQL::RMySQL()  例）PostgreSQLへの接続\ndrv \u0026lt;- PostgreSQL() con \u0026lt;- dbConnect(drv, host=\u0026quot;localhost\u0026quot;, user= \u0026quot;edd\u0026quot;, password=\u0026quot;.....\u0026quot;, dbname=\u0026quot;...\u0026quot;)  パスワードをRのソースに直接記述するのはセキュリティ上よろしくない。ファイルに書いておいてそれを読み出すようにする。そうすればRのソースを共有する場合にも安心である。\n例えば \u0026ldquo;.pgpass\u0026rdquo; というファイルにパスワードを保存してきそれを読み出す場合\npassword \u0026lt;- scan(\u0026quot;.pgpass\u0026quot;, what=\u0026quot;\u0026quot;)  接続の設定\nPostgreSQL() は接続の設定を変えられる。\nPostgreSQL(max.con = 16, fetch.default.rec = 500, force.reload = FALSE)\n max.con：最大コネクション数 fetch.default.rec：データを取得するときに一度に送信するレコード数。fetch()はこの値を利用する。 force.reload：クライアントのコードをリロードするか。イミフ  コネクションの情報を表示する summary(con)\nコネクションを解除する dbDisconnect(con) ## Closes the connection\nデータフレームの内容からテーブルを作成する：dbWriteTable dbWriteTable(con, \u0026quot;iris\u0026quot;, iris, row.names=FALSE) dbWriteTable(conn, name, value, ...)   overwrite=TRUE : テーブルを上書きする append=TRUE : 新しい行を追加する\ndbWriteTable(con, name = \u0026quot;sillytable\u0026quot;, #テーブル名 value = data.frame( #値 time=seq(Sys.time(), by=\u0026quot;1 day\u0026quot;, length=10), value=rnorm(10)), row.names=FALSE)   テーブルのリスト：dbListTables dbListTables(con)\nテーブルのカラム名：dbListFields dbListFields(con, \u0026quot;iris\u0026quot;)\nDBのデータを取得する\nテーブルを指定して読み込む：dbReadTable iris1 \u0026lt;- dbReadTable(con, \u0026ldquo;iris\u0026rdquo;)\nクエリの結果を読み込む：dbGetQuery data \u0026lt;- dbGetQuery(con, \u0026ldquo;SELECT * FROM iris ORDER BY weighted DESC LIMIT 5\u0026rdquo;)\nクエリの送信とデータの取得を分離する：dbSendQuery \u0026amp; fetch 上と同様クエリの結果を取得するが、クエリの送信とデータの取得を分離する。\nクエリを送信する rs \u0026lt;- dbSendQuery(con, \u0026ldquo;SELECT * FROM iris\u0026rdquo;)\n最初の10レコードだけ取得する iris3.first10 \u0026lt;- fetch(rs, 10)\n残りを全て取得する iris3.rest \u0026lt;- fetch(rs, -1)\n【重要】ローカルとリモート確保されたリソースを開放する dbClearResult(rs)\nfetch はカーソルを移動させながらデータを取得する。なのでこの場合 iris3.first10とiris3.restを合わせると（rbind(iris3.first10, iris3.rest)）全てのレコードになる。\ndbSendQueryの結果はリモートのリソースを消費するので必要がなくなったら dbClearResult すること。\nファイルからクエリを読み込んで実行する fileName\u0026lt;-\u0026ldquo;test.sql\u0026rdquo; q\u0026lt;-readChar(fileName, file.info(fileName)$size)\nres \u0026lt;- dbSendQuery(con, q)\nクエリ結果のリソースを開放する：dbClearResult rs \u0026lt;- dbSendQuery(con, \u0026ldquo;SELECT * FROM iris\u0026rdquo;) #最初のクエリ rs \u0026lt;- dbSendQuery(con, \u0026ldquo;SELECT * FROM hoge\u0026rdquo;) #エラー\n最初のクエリの結果を全て取得していないうちに、 同じコネクションで別のクエリを実行しようとしてもできない。\n実行する場合には、最初のクエリの結果をクリアする必要がある。 dbClearResult(con, rs) rs \u0026lt;- dbSendQuery(con, \u0026ldquo;SELECT * FROM hoge\u0026rdquo;) #OK\nresの結果の取得が完了していない 【重要】ローカルとリモート確保されたリソースを開放する dbClearResult(rs)\nテーブルを削除する：dbRemoveTable dbRemoveTable(conn,\u0026ldquo;table1\u0026rdquo;)\nカラム情報を表示する：dbColumnInfo(res, \u0026hellip;) dbColumnInfo(rs)\nname Sclass type len precision scale nullOK 1 Sepal.Length double FLOAT8 8 -1 -1 TRUE 2 Sepal.Width double FLOAT8 8 -1 -1 TRUE 3 Petal.Length double FLOAT8 8 -1 -1 TRUE 4 Petal.Width double FLOAT8 8 -1 -1 TRUE 5 Species character TEXT -1 -1 -1 TRUE 結果の元クエリを表示：dbGetStatement dbGetStatement(rs)\n[1] \u0026ldquo;SELECT * FROM iris\u0026rdquo; ローカルにあるクエリ結果のレコード数：dbGetRowCount(rs)\n[1] 10 \u0026hellip; just get the first 10 records 結果のうち、ローカルに送られてきたレコード数？\nテーブルの存在を確認：dbExistsTable dbExistsTable(con, c(\u0026ldquo;tmp\u0026rdquo;,\u0026ldquo;test_tbl\u0026rdquo;))\ndbClearResult() dbListResults(conn, \u0026hellip;) dbSendQuery()するとサーバーでクエリが実行され、サーバー上に結果が保存されるらしい、そのままにしておくとメモリなどのリソースを消費するので、必要なくなった結果は適宜開放する。\nクエリ結果オブジェクトのリスト：dbListResults 現在のコネクションでアクティブな DBIResult のリストを返す。\ndbClearResults(dbListResults(con)[[1]])\n現在開いているコネクション・オブジェクトのリスト：dbListConnections\nオブジェクトの型を調べる：dbDataType\nDBのでの例外（エラー情報）を取得する：dbGetException\nデータ変更クエリにより影響を受ける行数：dbGetRowsAffected\nクエリ結果に対する処理が完了しているか？：dbHasCompleted\nDBオブジェクトの状態が正常かチェックする：dbIsValid\n"},{"idx":13,"href":"/notes/","title":"Introduction","content":" Hello for personal use\n"}];window.bookSearch={pages:pages,idx:lunr(function(){this.ref("idx");this.field("title");this.field("content");pages.forEach(this.add,this);}),}})();